// Define patterns for different file categories
export const PATTERNS = {
  lockFiles: [
    'yarn.lock',
    'package-lock.json',
    'pnpm-lock.yaml',
    'composer.lock',
    'gemfile.lock',
    'podfile.lock',
    'go.sum',
    'cargo.lock',
    'pipfile.lock',
  ],
  generatedFiles: [
    '.generated.js',
    '.generated.ts',
    '.generated.css',
    '.auto.js',
    '.auto.css',
    '.min.js',
    '.min.css',
    '.bundle.js',
    '.bundle.css',
    '.chunk.js',
    '.chunk.css',
  ],
  buildDirs: [
    '/dist/',
    '/build/',
    '/.next/',
    '/coverage/',
    '/out/',
    '/target/',
    '/node_modules/',
    '/vendor/',
    '/.nuxt/',
    '/.vuepress/',
    '/.docusaurus/',
  ],
  packageFiles: [
    'package.json',
    'composer.json',
    'gemfile',
    'podfile',
    'go.mod',
    'cargo.toml',
    'pipfile',
    'build.gradle',
    'pom.xml',
    'requirements.txt',
    'pyproject.toml',
  ],
  changelogFiles: ['changelog', 'history', 'release-notes'],
  logFiles: ['.log', '/logs/', '.cache', '.tmp', '.temp'],
  bundleFiles: ['.map', '.bundle', '.chunk', '.vendor'],
  // New: More specific patterns for compiled files
  compiledFiles: [
    '.js.map',
    '.css.map',
    '.ts.map',
    '.bundle.js',
    '.chunk.js',
    '.vendor.js',
    '.min.js',
    '.min.css',
  ],
  // New: Source code file extensions that should NOT be treated as compiled
  sourceCodeExtensions: [
    '.ts',
    '.tsx',
    '.js',
    '.jsx',
    '.vue',
    '.svelte',
    '.py',
    '.java',
    '.cpp',
    '.c',
    '.cs',
    '.php',
    '.rb',
    '.go',
    '.rs',
    '.swift',
    '.kt',
    '.scala',
    '.clj',
    '.hs',
    '.ml',
    '.fs',
    '.elm',
    '.dart',
    '.r',
    '.m',
    '.mm',
    '.h',
    '.hpp',
  ],
};

// Define file type configurations
export const FILE_TYPE_CONFIGS = {
  lockFiles: {
    'yarn.lock': { name: 'yarn.lock', type: 'dependencies' },
    'package-lock.json': { name: 'package-lock.json', type: 'dependencies' },
    'pnpm-lock.yaml': { name: 'pnpm-lock.yaml', type: 'dependencies' },
    'composer.lock': { name: 'composer.lock', type: 'dependencies' },
    'gemfile.lock': { name: 'Gemfile.lock', type: 'gems' },
    'podfile.lock': { name: 'Podfile.lock', type: 'pods' },
    'go.sum': { name: 'go.sum', type: 'module checksums' },
    'cargo.lock': { name: 'Cargo.lock', type: 'dependencies' },
    'pipfile.lock': { name: 'Pipfile.lock', type: 'packages' },
  },
  packageFiles: {
    'package.json': { name: 'package.json', type: 'dependencies and metadata' },
    'composer.json': { name: 'composer.json', type: 'dependencies' },
    gemfile: { name: 'Gemfile', type: 'dependencies' },
    podfile: { name: 'Podfile', type: 'dependencies' },
    'go.mod': { name: 'go.mod', type: 'module dependencies' },
    'cargo.toml': { name: 'Cargo.toml', type: 'dependencies' },
    pipfile: { name: 'Pipfile', type: 'dependencies' },
    'build.gradle': { name: 'build.gradle', type: 'configuration' },
    'pom.xml': { name: 'pom.xml', type: 'Maven configuration' },
    'requirements.txt': { name: 'requirements.txt', type: 'Python dependencies' },
    'pyproject.toml': { name: 'pyproject.toml', type: 'Python configuration' },
  },
  changelogFiles: {
    changelog: 'Updated changelog with new features and fixes',
    history: 'Updated project history documentation',
    'release-notes': 'Updated release notes documentation',
  },
  buildDirs: {
    '/.next/': 'Updated Next.js build artifacts',
    '/.nuxt/': 'Updated Nuxt.js build artifacts',
    '/.vuepress/': 'Updated VuePress build artifacts',
    '/.docusaurus/': 'Updated Docusaurus build artifacts',
    '/coverage/': 'Updated code coverage reports',
    '/node_modules/': 'Updated third-party dependencies',
    '/vendor/': 'Updated third-party dependencies',
  },
};
